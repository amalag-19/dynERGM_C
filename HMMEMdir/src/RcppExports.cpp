// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;
using namespace arma;
using namespace std;

// rowsum_Mat
vec rowsum_Mat(mat M);
RcppExport SEXP HMMEMdir_rowsum_Mat(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(rowsum_Mat(M));
    return rcpp_result_gen;
END_RCPP
}
// colsum_Mat
vec colsum_Mat(mat M);
RcppExport SEXP HMMEMdir_colsum_Mat(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(colsum_Mat(M));
    return rcpp_result_gen;
END_RCPP
}
// epan
float epan(float input);
RcppExport SEXP HMMEMdir_epan(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< float >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(epan(input));
    return rcpp_result_gen;
END_RCPP
}
// gamma_init_update_HMM_dir
mat gamma_init_update_HMM_dir(mat gamma_init, vec log_alpha, mat theta, mat network_init, int N, int K);
RcppExport SEXP HMMEMdir_gamma_init_update_HMM_dir(SEXP gamma_initSEXP, SEXP log_alphaSEXP, SEXP thetaSEXP, SEXP network_initSEXP, SEXP NSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< vec >::type log_alpha(log_alphaSEXP);
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< mat >::type network_init(network_initSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(gamma_init_update_HMM_dir(gamma_init, log_alpha, theta, network_init, N, K));
    return rcpp_result_gen;
END_RCPP
}
// gamma_update_HMM_dir
cube gamma_update_HMM_dir(mat gamma_init, cube Tau, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_gamma_update_HMM_dir(SEXP gamma_initSEXP, SEXP TauSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< cube >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(gamma_update_HMM_dir(gamma_init, Tau, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// Tau_update_HMM_dir
field<mat> Tau_update_HMM_dir(cube gamma, cube log_pi, mat theta, cube network, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_Tau_update_HMM_dir(SEXP gammaSEXP, SEXP log_piSEXP, SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< cube >::type log_pi(log_piSEXP);
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(Tau_update_HMM_dir(gamma, log_pi, theta, network, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_dir_oe
mat grad_HMM_dir_oe(mat theta, cube gamma, cube network, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_grad_HMM_dir_oe(SEXP thetaSEXP, SEXP gammaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_dir_oe(theta, gamma, network, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_dir_re
mat grad_HMM_dir_re(mat theta, cube gamma, cube network, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_grad_HMM_dir_re(SEXP thetaSEXP, SEXP gammaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_dir_re(theta, gamma, network, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_dir_oe
mat hess_HMM_dir_oe(mat theta, cube gamma, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_hess_HMM_dir_oe(SEXP thetaSEXP, SEXP gammaSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_dir_oe(theta, gamma, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_dir_re
mat hess_HMM_dir_re(mat theta, cube gamma, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_hess_HMM_dir_re(SEXP thetaSEXP, SEXP gammaSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_dir_re(theta, gamma, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_dir_oe_re
mat hess_HMM_dir_oe_re(mat theta, cube gamma, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_hess_HMM_dir_oe_re(SEXP thetaSEXP, SEXP gammaSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_dir_oe_re(theta, gamma, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// ELBO_conv_HMM_dir
float ELBO_conv_HMM_dir(cube gamma, vec alpha, cube pi, cube Tau, mat theta, cube network, int N, int K, int T_data);
RcppExport SEXP HMMEMdir_ELBO_conv_HMM_dir(SEXP gammaSEXP, SEXP alphaSEXP, SEXP piSEXP, SEXP TauSEXP, SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP KSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< cube >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< cube >::type pi(piSEXP);
    Rcpp::traits::input_parameter< cube >::type Tau(TauSEXP);
    Rcpp::traits::input_parameter< mat >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(ELBO_conv_HMM_dir(gamma, alpha, pi, Tau, theta, network, N, K, T_data));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_dir_oe_K1
float grad_HMM_dir_oe_K1(vec theta, cube network, int N, int T_data);
RcppExport SEXP HMMEMdir_grad_HMM_dir_oe_K1(SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_dir_oe_K1(theta, network, N, T_data));
    return rcpp_result_gen;
END_RCPP
}
// grad_HMM_dir_re_K1
float grad_HMM_dir_re_K1(vec theta, cube network, int N, int T_data);
RcppExport SEXP HMMEMdir_grad_HMM_dir_re_K1(SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(grad_HMM_dir_re_K1(theta, network, N, T_data));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_dir_oe_K1
float hess_HMM_dir_oe_K1(vec theta, int N, int T_data);
RcppExport SEXP HMMEMdir_hess_HMM_dir_oe_K1(SEXP thetaSEXP, SEXP NSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_dir_oe_K1(theta, N, T_data));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_dir_re_K1
float hess_HMM_dir_re_K1(vec theta, int N, int T_data);
RcppExport SEXP HMMEMdir_hess_HMM_dir_re_K1(SEXP thetaSEXP, SEXP NSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_dir_re_K1(theta, N, T_data));
    return rcpp_result_gen;
END_RCPP
}
// hess_HMM_dir_oe_re_K1
float hess_HMM_dir_oe_re_K1(vec theta, int N, int T_data);
RcppExport SEXP HMMEMdir_hess_HMM_dir_oe_re_K1(SEXP thetaSEXP, SEXP NSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(hess_HMM_dir_oe_re_K1(theta, N, T_data));
    return rcpp_result_gen;
END_RCPP
}
// ELBO_conv_HMM_dir_K1
float ELBO_conv_HMM_dir_K1(vec theta, cube network, int N, int T_data);
RcppExport SEXP HMMEMdir_ELBO_conv_HMM_dir_K1(SEXP thetaSEXP, SEXP networkSEXP, SEXP NSEXP, SEXP T_dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< vec >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< cube >::type network(networkSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type T_data(T_dataSEXP);
    rcpp_result_gen = Rcpp::wrap(ELBO_conv_HMM_dir_K1(theta, network, N, T_data));
    return rcpp_result_gen;
END_RCPP
}
